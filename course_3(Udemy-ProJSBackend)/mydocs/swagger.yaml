openapi: 3.0.0
info:
  title: Learn express and swagger
  description: A course of writing documentation
  version: 1.1.0
  contact:
    email: sanasraza1234@gmail.com
    url: https:discoveranas.vercel.app

servers:
  - url: "{protocol}://localhost:5000/api/{version}"
    description: For Localhost
    variables: # Variables or slugs that can be provided in the url
      version:
        enum:
          - v1
          - v2
        default: v1
      protocol:
        enum:
          - http
          - https
        default: http

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerToken:
      type: http
      scheme: bearer

paths:
  /hello:
    get:
      tags: # Group name
        - String
      summary: Returns a greet message
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
                example: "Hello world"
        400:
          description: Bad request
        500:
          description: Internal server error

  /object:
    get:
      tags:
        - Object
      summary: Returns an object of course
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: Course name
                  price:
                    type: number
                    example: 123
        400:
          description: Bad request
        500:
          description: Internal server error

  /courses:
    get:
      tags:
        - Array
      summary: Returns all courses
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items: # Refers to elements of the array
                  type: object
                  properties:
                    id:
                      type: number
                      example: 1
                    name:
                      type: string
                      example: Course name
                    price:
                      type: number
                      example: 123
        400:
          description: Bad request
        500:
          description: Internal server error

  /courses/{courseId}:
    get:
      tags:
        - Object
      summary: Returns the course based on the given id
      parameters:
        - name: courseId
          in: path
          required: true
          default: 1
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: Course name
                  price:
                    type: number
                    example: 123
        400:
          description: Bad request
        500:
          description: Internal server error

  /addCourse:
    post:
      tags:
        - Object
      summary: Adds a new course to existing courses
      consumes: # It means the data that it takes
        - application/json
      produces: # It means the data that it gives
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                name:
                  type: string
                  example: Course name
                price:
                  type: number
                  example: 123
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: Bad request
        500:
          description: Internal server error

  /courseQuery:
    get:
      tags:
        - Object
      summary: Trying to learn about query
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
            enum: [Karachi, Lahore, Islamabad]
        - name: device
          in: query
          required: true
          schema:
            type: string
            enum: [Web, Mobile]
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  - location:
                      type: string
                  - device:
                      type: string
        400:
          description: Bad request
        500:
          description: Internal server error

  /upload:
    post:
      tags:
        - Image
      summary: Uploading image
      parameters:
        - in: header
          name: auth
      requestBody:
        content:
          multipart/form-data: # a media type
            schema:
              type: object # It is object because the decoded media has a lot of content
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: Bad request
        500:
          description: Internal server error